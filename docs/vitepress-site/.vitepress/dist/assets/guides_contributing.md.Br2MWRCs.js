import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.UtM2fnOC.js";const k=JSON.parse('{"title":"Contributing Guidelines","description":"","frontmatter":{},"headers":[],"relativePath":"guides/contributing.md","filePath":"guides/contributing.md"}'),t={name:"guides/contributing.md"};function l(p,s,h,o,r,d){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="contributing-guidelines" tabindex="-1">Contributing Guidelines <a class="header-anchor" href="#contributing-guidelines" aria-label="Permalink to &quot;Contributing Guidelines&quot;">​</a></h1><h2 id="how-to-contribute" tabindex="-1">How to Contribute <a class="header-anchor" href="#how-to-contribute" aria-label="Permalink to &quot;How to Contribute&quot;">​</a></h2><p>We welcome contributions to the Julia Auction System! This guide will help you get started.</p><h2 id="code-of-conduct" tabindex="-1">Code of Conduct <a class="header-anchor" href="#code-of-conduct" aria-label="Permalink to &quot;Code of Conduct&quot;">​</a></h2><p>Please be respectful and constructive in all interactions. We&#39;re building something together!</p><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><ol><li><strong>Fork the repository</strong> on GitHub</li><li><strong>Clone your fork</strong> locally:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/YOUR_USERNAME/julia-auction.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> julia-auction</span></span></code></pre></div></li><li><strong>Add upstream remote</strong>:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/julia-auction/julia-auction.git</span></span></code></pre></div></li><li><strong>Create a feature branch</strong>:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-feature-name</span></span></code></pre></div></li></ol><h2 id="making-changes" tabindex="-1">Making Changes <a class="header-anchor" href="#making-changes" aria-label="Permalink to &quot;Making Changes&quot;">​</a></h2><h3 id="before-you-start" tabindex="-1">Before You Start <a class="header-anchor" href="#before-you-start" aria-label="Permalink to &quot;Before You Start&quot;">​</a></h3><ul><li>Check existing issues and pull requests</li><li>For major changes, open an issue first to discuss</li><li>Ensure your Julia version is 1.9+</li></ul><h3 id="development-process" tabindex="-1">Development Process <a class="header-anchor" href="#development-process" aria-label="Permalink to &quot;Development Process&quot;">​</a></h3><ol><li><strong>Write tests first</strong> (TDD encouraged)</li><li><strong>Implement your feature</strong></li><li><strong>Run tests locally</strong>:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;using Pkg; Pkg.test()&#39;</span></span></code></pre></div></li><li><strong>Check style compliance</strong>:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts/check_style.jl</span></span></code></pre></div></li><li><strong>Update documentation</strong> if needed</li></ol><h3 id="commit-guidelines" tabindex="-1">Commit Guidelines <a class="header-anchor" href="#commit-guidelines" aria-label="Permalink to &quot;Commit Guidelines&quot;">​</a></h3><p>Format your commit messages as:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>type(scope): brief description</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Longer explanation if needed.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Fixes #123</span></span></code></pre></div><p>Types:</p><ul><li><code>feat</code>: New feature</li><li><code>fix</code>: Bug fix</li><li><code>docs</code>: Documentation only</li><li><code>style</code>: Code style changes</li><li><code>refactor</code>: Code refactoring</li><li><code>test</code>: Test additions/changes</li><li><code>chore</code>: Build process or auxiliary tool changes</li></ul><p>Example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>feat(auction): add support for Dutch auctions</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Implements descending price auctions with configurable</span></span>
<span class="line"><span>price decrements and time intervals.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Fixes #456</span></span></code></pre></div><h2 id="submitting-changes" tabindex="-1">Submitting Changes <a class="header-anchor" href="#submitting-changes" aria-label="Permalink to &quot;Submitting Changes&quot;">​</a></h2><h3 id="pull-request-process" tabindex="-1">Pull Request Process <a class="header-anchor" href="#pull-request-process" aria-label="Permalink to &quot;Pull Request Process&quot;">​</a></h3><ol><li><p><strong>Update your branch</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream/master</span></span></code></pre></div></li><li><p><strong>Push to your fork</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/your-feature-name</span></span></code></pre></div></li><li><p><strong>Create Pull Request</strong> on GitHub</p></li></ol><h3 id="pr-requirements" tabindex="-1">PR Requirements <a class="header-anchor" href="#pr-requirements" aria-label="Permalink to &quot;PR Requirements&quot;">​</a></h3><p>Your PR should:</p><ul><li>✅ Have a clear title and description</li><li>✅ Reference any related issues</li><li>✅ Pass all CI checks</li><li>✅ Include tests for new functionality</li><li>✅ Update documentation as needed</li><li>✅ Follow our style guide</li></ul><h3 id="pr-template" tabindex="-1">PR Template <a class="header-anchor" href="#pr-template" aria-label="Permalink to &quot;PR Template&quot;">​</a></h3><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## Description</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Brief description of changes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## Type of Change</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Bug fix</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] New feature</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Breaking change</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Documentation update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## Testing</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Tests pass locally</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] New tests added</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Existing tests updated</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## Checklist</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Code follows style guide</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Self-reviewed code</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] Documentation updated</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ ] No new warnings</span></span></code></pre></div><h2 id="testing-guidelines" tabindex="-1">Testing Guidelines <a class="header-anchor" href="#testing-guidelines" aria-label="Permalink to &quot;Testing Guidelines&quot;">​</a></h2><h3 id="writing-tests" tabindex="-1">Writing Tests <a class="header-anchor" href="#writing-tests" aria-label="Permalink to &quot;Writing Tests&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@testset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Feature Tests&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    @testset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Normal cases&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Test expected behavior</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> function_under_test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(input) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expected_output</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    @testset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Edge cases&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Test boundaries and special cases</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @test_throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ErrorType </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">function_under_test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(invalid_input)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    @testset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Performance&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Test performance requirements</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @elapsed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> function_under_test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(input) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.010</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 10ms</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h3 id="test-coverage" tabindex="-1">Test Coverage <a class="header-anchor" href="#test-coverage" aria-label="Permalink to &quot;Test Coverage&quot;">​</a></h3><p>Aim for &gt;90% code coverage:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;using Pkg; Pkg.test(coverage=true)&#39;</span></span></code></pre></div><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><h3 id="documenting-functions" tabindex="-1">Documenting Functions <a class="header-anchor" href="#documenting-functions" aria-label="Permalink to &quot;Documenting Functions&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    function_name(param1::Type1, param2::Type2) -&gt; ReturnType</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Brief description of what the function does.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># Arguments</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">- \`param1::Type1\`: Description of param1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">- \`param2::Type2\`: Description of param2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># Returns</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">- \`ReturnType\`: Description of return value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># Throws</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">- \`ErrorType\`: When this error occurs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># Examples</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\`\`julia</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">result = function_name(value1, value2)</span></span></code></pre></div><h1 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h1><ul><li><code>related_function</code> &quot;&quot;&quot; function function_name(param1::Type1, param2::Type2)::ReturnType <h1 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h1></li></ul><p>end</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>### Updating Documentation</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. Edit files in \`docs/src/\`</span></span>
<span class="line"><span>2. Build locally to test:</span></span>
<span class="line"><span>   \`\`\`bash</span></span>
<span class="line"><span>   julia --project=docs docs/make.jl</span></span></code></pre></div><ol start="3"><li>View at <code>docs/build/index.html</code></li></ol><h2 id="review-process" tabindex="-1">Review Process <a class="header-anchor" href="#review-process" aria-label="Permalink to &quot;Review Process&quot;">​</a></h2><h3 id="what-we-look-for" tabindex="-1">What We Look For <a class="header-anchor" href="#what-we-look-for" aria-label="Permalink to &quot;What We Look For&quot;">​</a></h3><ul><li><strong>Correctness</strong>: Does it work as intended?</li><li><strong>Performance</strong>: Does it meet performance requirements?</li><li><strong>Style</strong>: Does it follow our conventions?</li><li><strong>Tests</strong>: Are there adequate tests?</li><li><strong>Documentation</strong>: Is it well documented?</li></ul><h3 id="review-timeline" tabindex="-1">Review Timeline <a class="header-anchor" href="#review-timeline" aria-label="Permalink to &quot;Review Timeline&quot;">​</a></h3><ul><li>Initial review: Within 3 business days</li><li>Follow-up reviews: Within 1 business day</li><li>Small fixes: Often same day</li></ul><h2 id="getting-help" tabindex="-1">Getting Help <a class="header-anchor" href="#getting-help" aria-label="Permalink to &quot;Getting Help&quot;">​</a></h2><h3 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h3><ul><li><a href="./development.html">Development Guide</a></li><li><a href="./../api_reference.html">API Documentation</a></li></ul><h3 id="communication-channels" tabindex="-1">Communication Channels <a class="header-anchor" href="#communication-channels" aria-label="Permalink to &quot;Communication Channels&quot;">​</a></h3><ul><li><strong>GitHub Issues</strong>: Bug reports and feature requests</li><li><strong>GitHub Discussions</strong>: Questions and discussions</li><li><strong>Discord</strong>: Real-time chat (link in README)</li></ul><h2 id="recognition" tabindex="-1">Recognition <a class="header-anchor" href="#recognition" aria-label="Permalink to &quot;Recognition&quot;">​</a></h2><p>Contributors are recognized in:</p><ul><li>The CONTRIBUTORS file</li><li>Release notes</li><li>The project README</li></ul><p>Thank you for contributing! 🎉</p>`,55)])])}const u=i(t,[["render",l]]);export{k as __pageData,u as default};
